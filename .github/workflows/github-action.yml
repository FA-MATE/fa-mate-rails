name: Run

on:
  push:
    branches: [main]
  pull_request:

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      RAILS_ENV: test
    services:
      mysql:
        image: mysql:8.0.36
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 1234
        options: --health-cmd "mysqladmin ping -h 127.0.0.1" --health-interval 20s --health-timeout 10s --health-retries 10
        credentials:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}
      minio:
        image: devruri/fa-mate:minio
        env:
          MINIO_ROOT_USER: minio_root_ci_user
          MINIO_ROOT_PASSWORD: minio_root_ci_password
        volumes:
          - ${{ github.workspace }}/data:/data
        ports:
          - 9000:9000
        options: 
          --name=minio --health-cmd "curl http://127.0.0.1:9000/minio/health/live"
        credentials:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}
    container:
      image: ruby:3.1.2
    steps:
      - uses: actions/checkout@v2
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: 6.0
          mongodb-username: root
          mongodb-password: root
          mongodb-db: fa_mate_rails_ci
      - name: Install MySQL client
        run: apt-get update && apt-get install -y default-mysql-client  
      - name: bundler config
        run: bundle config set path 'vendor/bundle'
      - name: cache gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      - name: setup bundle
        if: steps.cache-gems.outputs.cache-hit != 'true'
        run: |
          bundle install --jobs 4 --retry 3
      - name: set database.yml
        run: |
          cp -v config/database.ci.yml config/database.yml
          cp -v config/storage.ci.yml config/storage.yml
          cp -v config/mongoid.ci.yml config/mongoid.yml
      - name: setup db schema
        run: |
          bundle exec rails db:create db:schema:load --trace
      - name: run spec
        run: bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.1.2
    steps:
      - uses: actions/checkout@v2
      - name: bundler config
        run: bundle config set path 'vendor/bundle'
      - name: cache gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      - name: setup bundle
        if: steps.cache-gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: run rubocop
        run: bundle exec rubocop